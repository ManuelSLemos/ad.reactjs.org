{"componentChunkName":"component---src-templates-docs-js","path":"/docs/faq-versioning.html","result":{"data":{"markdownRemark":{"html":"<p>React sigue los principios de <a href=\"https://semver.org/lang/es/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">versionado semántico (semver)</a>.</p>\n<p>Esto significa que lo hace con un número de versión <strong>x.y.z</strong>:</p>\n<ul>\n<li>Al lanzar <strong>correcciones de errores críticos</strong>, hacemos el lanzamiento de un <strong>parche</strong> cambiando el número <strong>z</strong> (ej: 15.6.2 a 15.6.3).</li>\n<li>Al lanzar una <strong>nueva funcionalidad</strong> o <strong>correciones de errores no críticos</strong>, hacemos un <strong>lanzamiento menor</strong> cambiando el número <strong>y</strong> (ej: 15.6.2 a 15.7.0).</li>\n<li>Al lanzar <strong>cambios con rupturas</strong>, hacemos un <strong>lanzamiento importante</strong> cambiando el número <strong>x</strong> (ej: 15.6.2 a 16.0.0).</li>\n</ul>\n<p>Los lanzamientos importantes también pueden contener nuevas funcionalidades, y cualquier lanzamiento puede incluir correcciones de errores.</p>\n<p>Los lanzamientos menores son el tipo de lanzamiento más común.</p>\n<blockquote>\n<p>Esta política de versiones no aplica a compilados de pre-lanzamientos en los canales de “Next” o “Experimental”. <a href=\"/ad.reactjs.org/docs/release-channels.html\">Aprende más sobre pre-lanzamientos.</a></p>\n</blockquote>\n<h3 id=\"breaking-changes\"><a href=\"#breaking-changes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cambios con rupturas </h3>\n<p>Los cambios con rupturas son inconvenientes para todos, por lo que intentamos minimizar el número de lanzamientos importantes – por ejemplo, React 15 fue lanzado en Abril de 2016 y React 16 fue lanzado en Septiembre de 2017; no esperamos lanzar React 17 hasta algún momento en el 2020.</p>\n<p>En cambio, lanzamos nuevas funcionalidades en versiones menores. Esto significa que los lanzamientos menores son a menudo más interesantes que los lanzamientos importantes, a pesar de su modesto nombre.</p>\n<h3 id=\"commitment-to-stability\"><a href=\"#commitment-to-stability\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Compromiso a la estabilidad </h3>\n<p>A medida que actualizamos React, intentamos minimizar el esfuerzo necesario para aprovechar nuevas funcionalidades. Cuando sea posible, mantendremos un API antiguo funcionando, incluso si eso significa ponerlo en un paquete separado. Por ejemplo, <a href=\"/ad.reactjs.org/blog/2016/07/13/mixins-considered-harmful.html\">el uso de <em>mixins</em> no ha sido recomendado durante años</a> pero aún son aceptados hasta hoy en día <a href=\"/ad.reactjs.org/docs/react-without-es6.html#mixins\">mediante el uso de create-react-class</a> y muchas bases de código aún siguen utilizándolos en código estable pero antiguo.</p>\n<p>Más de un millón de desarrolladores utilizan React, manteniendo colectivamente millones de componentes. Solamente la base de código de Facebook tiene más de 50.000 componentes de React. Esto significa que tenemos que hacer lo más fácil posible actualizar a nuevas versiones de React; si hacemos grandes cambios sin una guía de actualización, la gente se quedará atascada en versiones antiguas. Probamos estas guías de actualización en Facebook – si nuestro equipo de menos de 10 personas puede actualizar 50.000 componentes por si mismos, esperamos que la actualización sea manejable para cualquiera que utilice React. En muchos casos, escribimos <a href=\"https://github.com/reactjs/react-codemod\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><em>scripts</em> automatizados</a> para actualizar la sintaxis de componentes, que luego incluimos en la versión de código abierto para que todo el mundo los utilice.</p>\n<h3 id=\"gradual-upgrades-via-warnings\"><a href=\"#gradual-upgrades-via-warnings\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mejoras graduales a través de advertencias </h3>\n<p>Las versiones de desarrollo de React incluyen muchas advertencias útiles. Siempre que es posible, añadimos advertencias en preparación a futuros cambios con rupturas. De esta manera, si tu aplicación no tiene advertencias en el último lanzamiento, esta será compatible con el próximo lanzamiento importante. Esto te permite actualizar tu aplicación un componente a la vez.</p>\n<p>Las advertencias de desarrollo no afectarán el comportamiento en tiempo de ejecución de tu aplicación. De esa forma, puedes estar seguro de que tu aplicación se comportará de la misma manera entre la versión de desarrollo y la versión de producción — las únicas diferencias son que la versión de producción no registrará las advertencias y es más eficiente. (Si alguna vez observas lo contrario, por favor abre un caso).</p>\n<h3 id=\"what-counts-as-a-breaking-change\"><a href=\"#what-counts-as-a-breaking-change\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>¿Qué cuenta como un cambio con rupturas? </h3>\n<p>En general, <em>no publicamos</em> una versión importante por cambios a:</p>\n<ul>\n<li><strong>Advertencias de desarrollo.</strong> Dado que no afectan el comportamiento en producción, podemos añadir nuevas advertencias o modificar advertencias existentes entre versiones importantes. De hecho, esto es lo que nos permite advertir de forma fiable sobre los próximos cambios con rupturas.</li>\n<li><strong>APIs que comienzan con <code class=\"gatsby-code-text\">unstable_</code>.</strong> Estas ofrecen funcionalidades experimentales sobre cuyas APIs todavía no estamos seguros. Al publicar esto con un prefijo <code class=\"gatsby-code-text\">unstable_</code>, podemos iterar más rápido y llegar a un API estable lo antes posible.</li>\n<li><strong>Versiones alfa y <em>canary</em> de React.</strong>  Proporcionamos versiones alfa de React como una manera de probar nuevas características con antelación, pero necesitamos la flexibilidad para hacer cambios basados en lo que aprendemos en el período alfa. Si utilizas estas versiones, ten en cuenta que las APIs pueden cambiar antes de la versión estable sea publicada.</li>\n<li><strong>APIs no documentadas y estructuras de datos internas.</strong> Si accedes a nombres de propiedades internas como <code class=\"gatsby-code-text\">__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED</code> o <code class=\"gatsby-code-text\">__reactInternalInstance$uk43rzhitjg</code>, no podemos garantizar nada. Estás por tu cuenta.</li>\n</ul>\n<p>Esta política está diseñada para ser pragmática: desde luego, no queremos causarte dolores de cabeza. Si publicáramos una nueva versión importante por cada uno de estos cambios, acabaríamos lanzando más versiones importantes y causaríamos más inconvenientes con el versionado a la comunidad. También significaría que no podríamos mejorar React tan rápido como nos gustaría.</p>\n<p>Dicho esto, si creemos que algún cambio en esta lista va a provocar grandes problemas en la comunidad, haremos todo lo posible para proporcionar una guía de actualización gradual.</p>\n<h3 id=\"minors-versus-patches\"><a href=\"#minors-versus-patches\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Si un lanzamiento menor no incluye nuevas funcionalidades, por qué no es un parche? </h3>\n<p>Es posible que un lanzamiento menor no incluya nuevas funcionalidades. <a href=\"https://semver.org/#spec-item-7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Esto es permitido por semver</a>, que dice <strong>”[un lanzamiento menor] PUEDE incrementarse si una funcionalidad substancial o mejoras son introducidas en el código privado. PUEDE incluir cambios a nivel de parche.”</strong></p>\n<p>Sin embargo, sale a flote la pregunta de por qué estos lanzamientos no son versionados como parches.</p>\n<p>La respuesta es que cualquier cambio a React (o cualquier otro software) lleva cierto riesgo de romperse de maneras inesperadas. Imagina un escenario en el que el lanzamiento del parche que arregla un error accidentalmente crea un nuevo error. Esto no solo sería disruptivo para los desarrolladores, sino que también dañaría la confianza en futuros lanzamientos de parches. Es especialmente lamentable si el arreglo original es para un error que es raramente encontrado en la práctica.</p>\n<p>Tenemos un buen record de mantener los lanzamientos de React libres de errores, pero los lanzamientos de parches tienen un nivel mayor de confiabilidad ya que la mayoría de los desarrolladores asumen que pueden adoptarlos sin consecuencias adversas.</p>\n<p>Por estas razones, reservamos los lanzamientos de parches exclusivamente para los errores más críticos y vulnerabilidades de seguridad.</p>\n<p>Si el lanzamiento incluye cambios no esenciales - como por ejemplo refactorizados internos, cambios a los detalles de implementación, mejoras de rendimiento, o arreglos a errores menores - lanzaremos la versión menor incluso cuando no hay nuevas funcionalidades.</p>","frontmatter":{"title":"Política de versiones","next":null,"prev":null},"fields":{"path":"content/docs/faq-versioning.md","slug":"docs/faq-versioning.html"}}},"pageContext":{"slug":"docs/faq-versioning.html"}}}