{"componentChunkName":"component---src-templates-codepen-example-js","path":"/redirect-to-codepen/context/multiple-contexts","result":{"pageContext":{"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// Theme context, default to light theme\\nconst ThemeContext = React.createContext('light');\\n\\n// Contexto de usuario registrado\\nconst UserContext = React.createContext({\\n  name: 'Guest',\\n});\\n\\nclass App extends React.Component {\\n  render() {\\n    const {signedInUser, theme} = this.props;\\n\\n    // Componente App que proporciona valores de contexto iniciales\\n    // highlight-range{2-3,5-6}\\n    return (\\n      <ThemeContext.Provider value={theme}>\\n        <UserContext.Provider value={signedInUser}>\\n          <Layout />\\n        </UserContext.Provider>\\n      </ThemeContext.Provider>\\n    );\\n  }\\n}\\n\\nfunction Layout() {\\n  return (\\n    <div>\\n      <Sidebar />\\n      <Content />\\n    </div>\\n  );\\n}\\n\\n// Un componente puede consumir m√∫ltiples contextos.\\nfunction Content() {\\n  // highlight-range{2-10}\\n  return (\\n    <ThemeContext.Consumer>\\n      {theme => (\\n        <UserContext.Consumer>\\n          {user => (\\n            <ProfilePage user={user} theme={theme} />\\n          )}\\n        </UserContext.Consumer>\\n      )}\\n    </ThemeContext.Consumer>\\n  );\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}