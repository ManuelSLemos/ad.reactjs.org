{"componentChunkName":"component---src-templates-codepen-example-js","path":"/redirect-to-codepen/react-component-reference/get-snapshot-before-update","result":{"pageContext":{"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class ScrollingList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.listRef = React.createRef();\\n  }\\n\\n  getSnapshotBeforeUpdate(prevProps, prevState) {\\n    // ¿Estamos agregando nuevos elementos a la lista?\\n    // Captura la posición del scroll para que podamos ajustar el scroll después.\\n    if (prevProps.list.length < this.props.list.length) {\\n      const list = this.listRef.current;\\n      return list.scrollHeight - list.scrollTop;\\n    }\\n    return null;\\n  }\\n\\n  componentDidUpdate(prevProps, prevState, snapshot) {\\n    // Si tenemos un valor snapshot, agregamos nuevos elementos\\n    // Ajusta el scroll para que los nuevos elementos no empujen a los viejos fuera de la vista\\n    // (snapshot aquí es el valor que regresa de getSnapshotBeforeUpdate)\\n    if (snapshot !== null) {\\n      const list = this.listRef.current;\\n      list.scrollTop = list.scrollHeight - snapshot;\\n    }\\n  }\\n\\n  render() {\\n    return (\\n      <div ref={this.listRef}>{/* ...contents... */}</div>\\n    );\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}}